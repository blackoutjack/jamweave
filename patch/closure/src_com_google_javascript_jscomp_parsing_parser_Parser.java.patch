--- closure-orig/src/com/google/javascript/jscomp/parsing/parser/Parser.java	2015-02-27 11:55:33.525744051 -0600
+++ closure/src/com/google/javascript/jscomp/parsing/parser/Parser.java	2015-02-27 12:02:32.257739345 -0600
@@ -562,6 +562,12 @@
     return peek(index, TokenType.FUNCTION);
   }
 
+  // JAM begin
+  private boolean peekTransaction() {
+    return peek(0, TokenType.TRANSACTION);
+  }
+  // JAM end
+
   private ParseTree parseArrowFunction(Expression expressionIn) {
     SourcePosition start = getTreeStartLocation();
 
@@ -645,6 +651,38 @@
         FunctionDeclarationTree.Kind.EXPRESSION);
   }
 
+  // JAM begin
+  private ParseTree parseTransaction() {
+    SourcePosition start = getTreeStartLocation();
+    eat(TokenType.TRANSACTION);
+
+    eat(TokenType.OPEN_PAREN);
+    ParseTree introspector = parseExpression();
+    eat(TokenType.CLOSE_PAREN);
+    ParseTree transactionBody = parseStatement();
+
+    TransactionStatementTree transaction =  new TransactionStatementTree(
+        getTreeLocation(start), introspector, transactionBody);
+
+    return transaction;
+  }
+
+  private ParseTree parseTransactionExpression() {
+    SourcePosition start = getTreeStartLocation();
+    eat(TokenType.TRANSACTION);
+
+    eat(TokenType.OPEN_PAREN);
+    ParseTree introspector = parseExpression();
+    eat(TokenType.CLOSE_PAREN);
+    BlockTree transactionBody = parseBlock();
+
+    TransactionExpressionTree transaction =  new TransactionExpressionTree(
+        getTreeLocation(start), introspector, transactionBody);
+
+    return transaction;
+  }
+  // JAM end 
+
   private FormalParameterListTree parseFormalParameterList() {
     SourcePosition listStart = getTreeStartLocation();
     eat(TokenType.OPEN_PAREN);
@@ -859,6 +897,10 @@
       return parseTryStatement();
     case DEBUGGER:
       return parseDebuggerStatement();
+    // JAM begin
+    case TRANSACTION:
+      return parseTransaction();
+    // JAM end
     default:
       if (peekLabelledStatement()) {
         return parseLabelledStatement();
@@ -921,6 +963,9 @@
     case MINUS:
     case TILDE:
     case BANG:
+    // JAM begin
+    case TRANSACTION:
+    // JAM end
       return true;
     default:
       return false;
@@ -1433,6 +1478,10 @@
     case SLASH:
     case SLASH_EQUAL:
       return parseRegularExpressionLiteral();
+    // JAM begin
+    case TRANSACTION:
+      return parseTransactionExpression();  
+    // JAM end
     default:
       return parseMissingPrimaryExpression();
     }

