--- closure-orig/src/com/google/javascript/jscomp/parsing/NewIRFactory.java	2014-10-23 11:43:01.883685919 -0500
+++ closure/src/com/google/javascript/jscomp/parsing/NewIRFactory.java	2014-12-21 14:38:51.342965330 -0600
@@ -93,6 +93,10 @@
 import com.google.javascript.jscomp.parsing.parser.trees.TemplateSubstitutionTree;
 import com.google.javascript.jscomp.parsing.parser.trees.ThisExpressionTree;
 import com.google.javascript.jscomp.parsing.parser.trees.ThrowStatementTree;
+// JAM begin
+import com.google.javascript.jscomp.parsing.parser.trees.TransactionStatementTree;
+import com.google.javascript.jscomp.parsing.parser.trees.TransactionExpressionTree;
+// JAM end
 import com.google.javascript.jscomp.parsing.parser.trees.TryStatementTree;
 import com.google.javascript.jscomp.parsing.parser.trees.UnaryExpressionTree;
 import com.google.javascript.jscomp.parsing.parser.trees.VariableDeclarationListTree;
@@ -1907,6 +1911,24 @@
           transformBlock(stmt.body));
     }
 
+    // JAM begin
+    @Override
+    Node processTransactionStatement(TransactionStatementTree stmt) {
+      return newNode(
+        Token.TRANSACTION,
+        transform(stmt.introspector),
+        transform(stmt.body));
+    }
+    
+    @Override
+    Node processTransactionExpression(TransactionExpressionTree stmt) {
+      return newNode(
+        Token.TRANSACTION,
+        transform(stmt.introspector),
+        transformBlock(stmt.body));
+    }
+    // JAM end
+
     @Override
     Node processMissingExpression(MissingPrimaryExpressionTree tree) {
       // This will already have been reported as an error by the parser.

