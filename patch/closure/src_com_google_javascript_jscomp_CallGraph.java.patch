--- closure-orig/src/com/google/javascript/jscomp/CallGraph.java	2015-02-27 11:55:33.521744051 -0600
+++ closure/src/com/google/javascript/jscomp/CallGraph.java	2015-02-27 11:55:37.805744003 -0600
@@ -308,6 +308,18 @@
       for (Definition definition : definitions) {
         if (definition.isExtern()) {
           callsite.hasExternTarget = true;
+          // JAM begin
+          Node target = definition.getLValue();
+          assert target != null;
+          Node exval = definition.getRValue();
+          // We are only interested in function-valued externs, and
+          // not other types of values or undefined values.
+          if (exval != null && exval.isFunction()) {
+            if (computeForwardGraph && exval != null) {
+              callsite.addPossibleExternTarget(target);
+            }
+          }
+          // JAM end
         } else {
           Node target = definition.getRValue();
 
@@ -678,6 +690,10 @@
 
     private Collection<Function> possibleTargets;
 
+    // JAM begin
+    private Collection<Node> possibleExternTargets;
+    // JAM end
+
     private Callsite(Node callsiteAstNode) {
       astNode = callsiteAstNode;
     }
@@ -727,6 +743,31 @@
       possibleTargets.add(target);
     }
 
+    // JAM begin
+    public Collection<Node> getPossibleExternTargets() {
+      if (computeForwardGraph) {
+        if (possibleExternTargets != null) {
+          return possibleExternTargets;
+        } else {
+          return ImmutableList.of();
+        }
+      } else {
+        throw new UnsupportedOperationException("Cannot call " +
+            "getPossibleExternTargets() on a Callsite from a non-forward " +
+            "CallGraph");
+      }
+    }
+
+    private void addPossibleExternTarget(Node target) {
+      Preconditions.checkState(computeForwardGraph);
+
+      if (possibleExternTargets == null) {
+        possibleExternTargets = new LinkedList<Node>();
+      }
+      possibleExternTargets.add(target);
+    }
+    // JAM end
+
     /**
      * If true, then DefinitionProvider used in callgraph construction
      * was unable find all target functions of this callsite.

