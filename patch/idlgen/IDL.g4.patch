--- idlgen-orig/IDL.g4	2014-12-09 17:35:48.784114689 -0600
+++ idlgen/IDL.g4	2014-12-10 14:31:59.120423085 -0600
@@ -36,7 +36,7 @@
 grammar IDL;
 
 specification
-    :   import_decl* definition+
+    :   import_decl* definition*
     ;
 
 definition
@@ -50,7 +50,8 @@
     |   type_prefix_decl SEMICOLON
     |   event SEMICOLON
     |   component SEMICOLON
-    |   home_decl SEMICOLON
+    |   include_decl
+    |   dictionary_decl SEMICOLON
     ;
 
 module
@@ -63,15 +64,15 @@
     ;
 
 interface_decl
-    :   interface_header LEFT_BRACE interface_body RIGHT_BRACE
+    :   modifiers? interface_header LEFT_BRACE interface_body RIGHT_BRACE
     ;
 
 forward_decl
-    :   ( KW_ABSTRACT | KW_LOCAL )? KW_INTERFACE ID
+    :   ( KW_ABSTRACT | KW_LOCAL )? KW_INTERFACE id
     ;
 
 interface_header
-    :   ( KW_ABSTRACT | KW_LOCAL )? KW_INTERFACE ID ( interface_inheritance_spec )?
+    :   ( KW_ABSTRACT | KW_LOCAL )? KW_INTERFACE id ( interface_inheritance_spec )?
     ;
 
 interface_body
@@ -97,7 +98,7 @@
     ;
 
 scoped_name
-    :   ( DOUBLE_COLON )? ID ( DOUBLE_COLON ID )*
+    :   ( DOUBLE_COLON )? id ( DOUBLE_COLON id )*
     ;
 
 value
@@ -157,7 +158,7 @@
     ;
 
 const_decl
-    :   KW_CONST const_type ID EQUAL const_exp
+    :   KW_CONST const_type id EQUAL const_exp
     ;
 
 const_type
@@ -229,10 +230,20 @@
     |   struct_type
     |   union_type
     |   enum_type
-    |   KW_NATIVE simple_declarator
+    |   modifiers? KW_NATIVE native_declarator
     |   constr_forward_decl
     ;
 
+native_declarator
+    :   simple_declarator (LEFT_BRACKET native_type_spec RIGHT_BRACKET)?
+    ;
+
+native_type_spec
+    :   KW_VOID STAR*
+    |   KW_CONST? (KW_UNION | KW_STRUCT)? type_spec STAR* KW_CONST? STAR*
+    |   simple_declarator LEFT_ANG_BRACKET native_type_spec (COMA native_type_spec)* RIGHT_ANG_BRACKET STAR*
+    ;
+
 type_declarator
     :   type_spec declarators
     ;
@@ -283,7 +294,7 @@
     ;
 
 simple_declarator
-    :   ID
+    :   id
     ;
 
 complex_declarator
@@ -337,6 +348,11 @@
 
 char_type
     :   KW_CHAR
+    |   unsigned_char_type
+    ;
+
+unsigned_char_type
+    :   KW_UNSIGNED KW_CHAR
     ;
 
 wide_char_type
@@ -432,8 +448,25 @@
     ;
 
 attr_decl
-    :   readonly_attr_spec
-    |   attr_spec
+    :   modifiers? readonly_attr_spec
+    |   modifiers? attr_spec
+    ;
+
+modifiers
+    :   LEFT_SQUARE_BRACKET modifier ( COMA modifier )* RIGHT_SQUARE_BRACKET
+    ;
+
+modifier
+    :   id
+    |   compound_modifier
+    ;
+
+compound_modifier
+    :   id LEFT_BRACKET modifier_value RIGHT_BRACKET
+    ;
+
+modifier_value
+    :   UUID | id | literal
     ;
 
 except_decl
@@ -441,7 +474,7 @@
     ;
 
 op_decl
-    :   ( op_attribute )? op_type_spec ID parameter_decls ( raises_expr )? ( context_expr )?
+    :   modifiers? ( op_attribute )? op_type_spec simple_declarator parameter_decls ( raises_expr )? ( context_expr )?
     ;
 
 op_attribute
@@ -449,7 +482,7 @@
     ;
 
 op_type_spec
-    :   param_type_spec
+    :   modifiers? param_type_spec
     |   KW_VOID
     ;
 
@@ -459,7 +492,7 @@
     ;
 
 param_decl
-    :   param_attribute param_type_spec
+    :   modifiers? param_attribute param_type_spec
         simple_declarator
     ;
 
@@ -501,6 +534,22 @@
     |   KW_UNION ID
     ;
 
+include_decl
+    :   KW_INCLUDE STRING_LITERAL
+    ;
+
+dictionary_decl
+    :   KW_DICTIONARY scoped_name (COLON scoped_name)? LEFT_BRACE dictionary_body RIGHT_BRACE
+    ;
+
+dictionary_body
+    :   dictionary_item*
+    ;
+
+dictionary_item
+    :   type_spec '?'? declarators (EQUAL const_exp)? SEMICOLON
+    ;
+
 import_decl
     :   KW_IMPORT imported_scope SEMICOLON
     ;
@@ -615,32 +664,10 @@
     :   KW_CONSUMES scoped_name ID
     ;
 
-home_decl
-    :   home_header home_body
-    ;
-
-home_header
-    :   KW_HOME ID ( home_inheritance_spec )? ( supported_interface_spec )? KW_MANAGES scoped_name ( primary_key_spec )?
-    ;
-
-home_inheritance_spec
-    :   COLON scoped_name
-    ;
-
 primary_key_spec
     :   KW_PRIMARYKEY scoped_name
     ;
 
-home_body
-    :   LEFT_BRACE home_export* RIGHT_BRACE
-    ;
-
-home_export
-    :   export
-    |   factory_decl SEMICOLON
-    |   finder_decl SEMICOLON
-    ;
-
 factory_decl
     :   KW_FACTORY ID LEFT_BRACKET ( init_param_decls )? RIGHT_BRACKET ( raises_expr )?
     ;
@@ -669,6 +696,23 @@
     :   ( KW_CUSTOM )? KW_EVENTTYPE ID value_inheritance_spec
     ;
 
+/* An ID that allows keywords. */
+id
+    :   ID
+    |   KW_SETRAISES | KW_OUT | KW_EMITS | KW_STRING | KW_SWITCH
+    |   KW_PUBLISHES | KW_TYPEDEF | KW_USES | KW_PRIMARYKEY | KW_CUSTOM
+    |   KW_OCTET | KW_SEQUENCE | KW_IMPORT | KW_STRUCT | KW_NATIVE
+    |   KW_READONLY | KW_FINDER | KW_RAISES | KW_VOID | KW_PRIVATE
+    |   KW_EVENTTYPE | KW_WCHAR | KW_IN | KW_DEFAULT | KW_PUBLIC
+    |   KW_SHORT | KW_LONG | KW_ENUM | KW_WSTRING | KW_CONTEXT
+    |   KW_FACTORY | KW_EXCEPTION | KW_GETRAISES | KW_CONST
+    |   KW_VALUEBASE | KW_VALUETYPE | KW_SUPPORTS | KW_MODULE
+    |   KW_OBJECT | KW_TRUNCATABLE | KW_UNSIGNED | KW_FIXED | KW_UNION
+    |   KW_ONEWAY | KW_ANY | KW_CHAR | KW_CASE | KW_FLOAT | KW_BOOLEAN
+    |   KW_MULTIPLE | KW_ABSTRACT | KW_INOUT | KW_PROVIDES | KW_CONSUMES
+    |   KW_DOUBLE | KW_TYPEPREFIX | KW_TYPEID | KW_ATTRIBUTE | KW_LOCAL
+    |   KW_MANAGES | KW_INTERFACE | KW_COMPONENT | KW_DICTIONARY
+    ;
 
 INTEGER_LITERAL : ('0' | '1'..'9' '0'..'9'*) INTEGER_TYPE_SUFFIX? ;
 
@@ -831,7 +875,6 @@
 KW_ENUM:                'enum';
 KW_WSTRING:             'wstring';
 KW_CONTEXT:             'context';
-KW_HOME:                'home';
 KW_FACTORY:             'factory';
 KW_EXCEPTION:           'exception';
 KW_GETRAISES:           'getraises';
@@ -864,11 +907,18 @@
 KW_MANAGES:             'manages';
 KW_INTERFACE:           'interface';
 KW_COMPONENT:           'component';
+KW_DICTIONARY:          'dictionary';
+KW_INCLUDE:             '#include';
 
-ID
+/* Have to explicitly allow keywords as identifiers. */
+ID  
     :   LETTER (LETTER|ID_DIGIT)*
     ;
 
+UUID
+    :   (ID_DIGIT | LETTER) ( ID_DIGIT | LETTER | MINUS )*
+    ;
+
 WS
     :   (' ' | '\r' | '\t' | '\u000C' | '\n') -> channel(HIDDEN)
     ;
@@ -877,6 +927,10 @@
     :   '/*' .*? '*/' -> channel(HIDDEN)
     ;
 
+CPPBLOCK
+    :   '%{' WS* 'C++' .*? '%}' -> channel(HIDDEN)
+    ;
+
 LINE_COMMENT
     :   '//' ~('\n' | '\r')* '\r'? '\n' -> channel(HIDDEN)
     ;
