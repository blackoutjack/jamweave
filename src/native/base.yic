(define True::int)
(define False::int)
(assert (/= True False))
(define ToBool::(-> int bool) (lambda (a::int) (= a True)))
(define ToInt::(-> bool int) (lambda (a::bool) (if a True False)))
(define HasType::(-> int int))
(define HasProp::(-> int int int))
(define IsNativeFun::(-> int bool))
(define IsNumProp::(-> int bool))
(define RegexTest::(-> int int bool))
(define StringContains::(-> int int bool))
(define StringStartsWith::(-> int int bool))
(define Mult::(-> int int int))
(define instanceof::(-> int int bool))
(define uniq::(-> int int))

